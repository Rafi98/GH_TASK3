name: Get Repositories

on:
  workflow_dispatch:

jobs:
 Install_gh_CLI:
     runs-on: ubuntu-latest
     steps:
      - name: Install gh CLI
        run: |
          # Install gh CLI
          sudo mkdir -p -m 755 /etc/apt/keyrings && wget -qO- https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo tee /etc/apt/keyrings/githubcli-archive-keyring.gpg > /dev/null \
          && sudo chmod go+r /etc/apt/keyrings/githubcli-archive-keyring.gpg \
          && echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
          && sudo apt update \
          && sudo apt install gh -y

 login:
   runs-on: ubuntu-latest
   steps:
      - name: Log in to GitHub
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          gh auth login --with-token <<<"${GH_TOKEN}"
    
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Get Repository Names
        id: get-repos
        run: |
          gh api --paginate '/users/Rafi98/repos' --jq '.[].full_name' > repositories.txt

          #gh api --paginate '/Rafi98/GH_TASK3' --jq '.[].full_name' > repositories.txt
          # Replace '/Rafi98/GH_TASK3' with the appropriate endpoint for organization repositories if needed

      - name: Display Repository Names
        run: |
          cat repositories.txt

      - name: Get Repository Topics
        id: get-topics
        run: |
          topics=$(gh api repos/Rafi98/GH_TASK3/topics --jq '.names[]')
          echo "Repository Topics: $topics"

      - name: Print Topics File Content
        run: |
          cat .github/workflows/topics.txt
     
      - name: Install gh CLI
        run: |
          # Install gh CLI
          sudo mkdir -p -m 755 /etc/apt/keyrings && wget -qO- https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo tee /etc/apt/keyrings/githubcli-archive-keyring.gpg > /dev/null \
          && sudo chmod go+r /etc/apt/keyrings/githubcli-archive-keyring.gpg \
          && echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
          && sudo apt update \
          && sudo apt install gh -y

      - name: Fetch Repository List
        id: fetch-repos
        run: |
          gh api --paginate '/users/Rafi98/repos' --jq '.[].full_name' > repositories.txt

      - name: Read Repository List
        id: read-repos
        run: |
          while IFS= read -r repo; do
            echo "$repo"
          done < repositories.txt
  
      - name: Read topics.txt and README.md
        run: |
          topics=$(<.github/workflows/topics.txt)
          #readme_content=$(<README.md)
           readme_topics=$(grep -oE '^#+\s+\S+' README.md | sed 's/#* //')

           #Compare topics and find newly added ones
           newly_added_topics=$(comm -23 <(echo "$topics.txt" | sort) <(echo "$readme_topics" | sort))

          # Display newly added topics
          echo "Newly added topics:"
          echo "$newly_added_topics"

          if [ -n "$newly_added_topics" ]; then
            echo -e "\n\n## Newly Added Topics\n$newly_added_topics" >> README.md
            git add README.md
            git commit -m "Add newly added topics to README.md"
            git push
          fi 

          
          # Check if topics are present in README.md
          missing_topics=""
          while IFS= read -r topic; do
              if ! grep -q "$topic" <<< "$readme_content"; then
                  missing_topics+="$topic\n"
              fi
          done <<< "$topics"

          if [ -n "$missing_topics" ]; then
              echo "The following topics are missing from README.md:"
              echo -e "$missing_topics"

              # Update README.md with missing topics
              echo -e "\n\n## Missing Topics\n$missing_topics" > README.md

              # Commit and push changes
              git config --local user.email "action@github.com"
              git config --local user.name "GitHub Action"
              git add README.md
              git commit -m "Update README.md with missing topics"
              git push origin main
           else
              echo "All topics from topics.txt are already present in README.md."
           fi
